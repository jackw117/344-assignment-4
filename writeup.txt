I mapped each word in the index to an MD5 encoding of the url that is associated with that word in Azure Tables. When a user inputs a word or words, I create a dictionary with my Page class as the key and an int as the value that represents the amount of words from the user input that are in a url from the Page class. I then use linq to order these and take the top 20, which I then return as urls to the user by making an AJAX request. The cache is a dictionary with a string as the key and a list of strings as the value. The string is the user input, and the list of strings is the 20 urls that get returned from that input. This dictionary is reset once it has 100 entries in it. Every time the user hits submit, it makes a cross domain AJAX request to my PA1 on AWS with the given input. If that input matches an NBA player 100%, it will return information on that player that I had from PA1. I tried signing up for Google Adsense and they denied my website, and also tried Chitika on Saturday, but because of the three day weekend they still havenÅft gotten back to me. So there are no ads on my website right now. Everything else is the same as the other three programming assignments, and I just incorporated the code for all of them into a single cloud service. I created a Crawler class that I used to search for sitemaps in the ÅgloadingÅh phase, as well as creating the initial blacklists from the robots.txt files.